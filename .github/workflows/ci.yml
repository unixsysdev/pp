name: Enterprise Language CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm run test
    
    - name: Build project
      run: npm run build
    
    - name: Run basic examples
      run: |
        npm run dev examples/factorial.el || echo "Example failed, continuing..."
        npm run dev examples/fibonacci.el || echo "Example failed, continuing..."

  build-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi
    
    - name: Type check
      run: npx tsc --noEmit
    
    - name: Build project
      run: npm run build

  # Optional LLVM build (only if LLVM is available)
  llvm-build:
    runs-on: ubuntu-latest
    continue-on-error: true  # Don't fail the whole pipeline if LLVM isn't available
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install LLVM
      run: |
        sudo apt-get update
        sudo apt-get install -y llvm-14 clang-14
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi
    
    - name: Test LLVM compilation
      run: |
        echo "Testing LLVM compilation (may fail if not fully implemented)"
        # This is optional for now since LLVM backend might not be complete

  # Code quality checks
  quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi
    
    - name: Check formatting
      run: npm run format || echo "Formatting check failed, but continuing..."
    
    - name: Security audit
      run: npm audit --audit-level moderate || echo "Security audit completed with warnings"
